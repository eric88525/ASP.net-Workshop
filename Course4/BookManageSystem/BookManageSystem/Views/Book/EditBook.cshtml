@model BookMamageSystem.Models.Book

@{
    ViewBag.Title = "EditBook";
}

@if (TempData["edit"] == null)
{
    <h2>檢視書籍資訊</h2>
}
else
{
    <h2>編輯書籍資訊</h2>
}




@using (Html.BeginForm("EditBook", "Book", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId, new { @id = "bookId" })

        <div class="form-group">
            @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control InputItem" } })
                @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BookAuthor, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookAuthor, new { htmlAttributes = new { @class = "form-control InputItem" } })
                @Html.ValidationMessageFor(model => model.BookAuthor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookPublisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookPublisher, new { htmlAttributes = new { @class = "form-control InputItem" } })
                @Html.ValidationMessageFor(model => model.BookPublisher, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookNote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BookNote, new {  @class = "form-control InputItem" })
                @Html.ValidationMessageFor(model => model.BookNote, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookBoughtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookBoughtDate, new { htmlAttributes = new { @class = "form-control SelectItem", @type = "Date" } })
                @Html.ValidationMessageFor(model => model.BookBoughtDate, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.BookClassId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookClassId, (List<SelectListItem>)ViewBag.BookClassIdData, "請選擇", new { @class = "form-control SelectItem" })
                @Html.ValidationMessageFor(model => model.BookClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookStatus, (List<SelectListItem>)ViewBag.BookStatusData, "請選擇", new { @class = "form-control SelectItem", @id = "bookStatusSelector" })
                @Html.ValidationMessageFor(model => model.BookStatus, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BookKeeperId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookKeeperId, (List<SelectListItem>)ViewBag.KeeperFullNameData, "請選擇", new { @class = "form-control SelectItem" })
                @Html.ValidationMessageFor(model => model.BookKeeperId, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (TempData["edit"] != null)
                {
                    <input type="submit" value="儲存" class="btn btn-default" />
                    <a id="btnDelete" class="btn btn-default"> 刪除</a>
                    <a href="/Book/SearchBook" class="btn btn-default"> 返回搜尋</a>
                }
                else
                {
                    <a href="/Book/SearchBook" class="btn btn-default"> 返回搜尋</a>
                }
                
           
              

            </div>
        </div>
    </div>
}

@if (TempData["message"] != null)
{
    <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(TempData["message"]));
        alert(message);
    </script>
}



<script>

    $(document).ready(function () {

        $("#btnDelete").click(function (e) {
            if (confirm("是否刪除?") == true) {
                console.log($("#bookId").val());
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Book/DeleteBook",
                    data: "bookId=" + $("#bookId").val(),
                    dataType: "json",
                    success: function (response) {
                        alert("成功");
                        window.location.href = "/Book/SearchBook";
                    }, error: function (error) {
                        alert("此書無法刪除");
                    }
                });
            } else {
                alert("取消刪除");
            }

        });


        function BookStatusCheck() {
            var value = $("#bookStatusSelector").val();
            if (value == 'B' || value == 'C') {
                // 必填
                $('#BookKeeperId').prop('disabled', false);
                $('#BookKeeperId').prop('required', true);

            } else {
                // 封鎖並清除
                $('#BookKeeperId').prop('disabled', 'disabled');
                $("#BookKeeperId  :selected").removeAttr("selected");
                $('#BookKeeperId').prop('required', false);
                $('#BookKeeperId').prop('data-val-required', "此欄位必填");
                
            }
        }


        $("#bookStatusSelector").ready(function () {
            if (@TempData["edit"] != null) {
                BookStatusCheck();
            }
           
        });

        $("#bookStatusSelector").change(function () {
            BookStatusCheck();
        });


    });



</script>

@if (TempData["edit"] == null)
{
    <script type="text/javascript">
        $(".InputItem").prop("readonly", true);
        $(".SelectItem").prop('disabled', true);
    </script>
}
